import React, { useRef } from 'react';
import App from './../App';
import { useState } from 'react'
import { AgGridReact } from 'ag-grid-react'; // the AG Grid React Component



import 'ag-grid-community/styles/ag-grid.css'; // Core grid CSS, always needed
import 'ag-grid-community/styles/ag-theme-material.css'; // Optional theme CSS

import Todotable from './Todotable';

export default function Todolist() {

        
    const [item, setItem] = useState({description: '', date: '', priority: 'Low'})
    const [itemList, setItemList] = useState([]);
    const gridRef = useRef();

    const columns = [
        {
            headerName: 'Description',
            field: 'description',
            sortable: true,
            filter: true,
           // floatingFilter: true,
            resizable: true
        },
        {
            headerName: 'Date',
            field: 'date',
            sortable: true,
            filter: true,
            //floatingFilter: true
        },
        {
            headerName: 'Priority',
            field: 'priority',
            sortable: true,
            filter: true,
          //  floatingFilter: true,
            cellStyle: param => param.value === "High" ? {color: 'red'} : {color : 'black'}
        }
    ];
  
    const changeState = (event) => {
      setItem({...item, [event.target.name]: event.target.value});
    }
  
    function addTask() {
      setItemList([...itemList, item]);
      setItem({description:'', date:'', priority: 'Low'});
    }
    
  function handleDelete() {
    //console.log(gridRef.current.getSelectedNodes()[0].id);
    //console.log(itemList);
    var deleteIndex = gridRef.current.getSelectedNodes()[0].id; // haetaan taulukosta valitun rivin id, tässä tapauksessa sama kuin index (autogenerated)
    setItemList(itemList.filter((_, i) => i != deleteIndex)); // tehdään uusi lista niistä alkioista joiden index on ERI kuin klikatun rivin
  }

    return(
        <div className="ag-theme-material" style={{width: '60em', height: '800px', margin: 'auto', textAlign: 'center'}}>
            <h1>SIMPLE TODO LIST</h1>
                <fieldset>
                <legend>Add todo</legend>
                    <label>Description:
                        <input type="text" name="description" value={item.description} onChange={changeState}/>
                    </label>
                    <label>Date:
                        <input type="date" name="date" value={item.date} onChange={changeState}/>
                    </label>
                    <label>Priority:
                        <select value={item.priority} name="priority" onChange={changeState}>
                            <option value="High">High</option>
                            <option value="Medium">Medium</option>
                            <option value="Low">Low</option>
                        </select>
                    </label>
                    <button onClick={addTask}>Add</button>
                    <button onClick={handleDelete}>Delete</button>
                </fieldset>
            <div className="ag-theme-material" style={{width: '45em', height: '800px', margin: 'auto', textAlign: 'center'}}>
                <AgGridReact 
                    rowSelection="single"
                    ref={gridRef}
                    onGridReady={ params => gridRef.current = params.api }
                    columnDefs={columns}
                    rowData={itemList}
                    animateRows="true"
                />
            </div>
        </div>
    )
}